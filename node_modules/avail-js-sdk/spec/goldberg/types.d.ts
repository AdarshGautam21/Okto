export declare const goldbergTypes: {
    AppId: string;
    DataLookupIndexItem: {
        appId: string;
        start: string;
    };
    DataLookup: {
        size: string;
        index: string;
    };
    KateCommitment: {
        rows: string;
        cols: string;
        commitment: string;
        dataRoot: string;
    };
    V1HeaderExtension: {
        appLookup: string;
        commitment: string;
    };
    V2HeaderExtension: {
        appLookup: string;
        commitment: string;
    };
    V3HeaderExtension: {
        appLookup: string;
        commitment: string;
    };
    HeaderExtension: {
        _enum: {
            V1: string;
            V2: string;
            V3: string;
        };
    };
    DaHeader: {
        parentHash: string;
        number: string;
        stateRoot: string;
        extrinsicsRoot: string;
        digest: string;
        extension: string;
    };
    Header: string;
    CheckAppIdExtra: {
        appId: string;
    };
    CheckAppIdTypes: {};
    CheckAppId: {
        extra: string;
        types: string;
    };
    BlockLengthColumns: string;
    BlockLengthRows: string;
    BlockLength: {
        max: string;
        cols: string;
        rows: string;
        chunkSize: string;
    };
    PerDispatchClass: {
        normal: string;
        operational: string;
        mandatory: string;
    };
    DataProof: {
        root: string;
        proof: string;
        numberOfLeaves: string;
        leaf_index: string;
        leaf: string;
    };
    DataProofV2: {
        dataRoot: string;
        blobRoot: string;
        bridgeRoot: string;
        proof: string;
        numberOfLeaves: string;
        leafIndex: string;
        leaf: string;
    };
    ProofResponse: {
        dataProof: string;
        message: string;
    };
    Message: {
        messageType: string;
        from: string;
        to: string;
        originDomain: string;
        destinationDomain: string;
        data: string;
        id: string;
    };
    MessageType: {
        _enum: string[];
    };
    Cell: {
        row: string;
        col: string;
    };
};
