"use strict";var j=Object.defineProperty;var qe=Object.getOwnPropertyDescriptor;var Qe=Object.getOwnPropertyNames;var Ye=Object.prototype.hasOwnProperty;var Ge=(r,t,e)=>t in r?j(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var Je=(r,t)=>{for(var e in t)j(r,e,{get:t[e],enumerable:!0})},Xe=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Qe(t))!Ye.call(r,o)&&o!==e&&j(r,o,{get:()=>t[o],enumerable:!(n=qe(t,o))||n.enumerable});return r};var et=r=>Xe(j({},"__esModule",{value:!0}),r);var te=(r,t,e)=>(Ge(r,typeof t!="symbol"?t+"":t,e),e);var pt={};Je(pt,{BlockNotPinnedError:()=>$,BlockPrunedError:()=>W,NotBestBlockError:()=>N,getObservableClient:()=>ut});module.exports=et(pt);var D=require("rxjs"),F=(0,D.share)({connector:()=>new D.ReplaySubject(1),resetOnError:!0,resetOnComplete:!0,resetOnRefCountZero:!0});var L=require("rxjs"),me=(r,t=1/0)=>e=>new L.Observable(n=>{let o,u=new Map,p=new Map,s=new Map,l=0,k=0,g=0,w=()=>{let a=u.get(k);if(!a){p.size===0&&(typeof o>"u"||o.closed)&&n.complete();return}let c=k++;u.delete(c),g!==c&&s.set(c,[]),p.set(c,a.subscribe({next(f){g===c?n.next(f):s.get(c).push(f)},complete(){if(p.delete(c),c===g)for(g++;s.has(g)&&(s.get(g).forEach(f=>n.next(f)),s.delete(g),!p.has(g));)g++;w()},error(f){n.error(f)}}))};return o=e.subscribe({next(a){let c=l++;u.set(c,(0,L.defer)(()=>r(a,c))),p.size<t&&w()},error(a){n.error(a)},complete(){p.size===0&&n.complete()}}),()=>{p.forEach(a=>a.unsubscribe()),o.unsubscribe(),u.clear(),s.clear()}});var de=require("rxjs"),ge=r=>t=>new de.Observable(e=>{let n=!1,o=t.subscribe({next(u){n=!0,e.next(u)},error(u){e.error(u)},complete(){e.complete()}});return n||e.next(r),o});var Ie=require("@polkadot-api/substrate-bindings"),Pe=require("@polkadot-api/substrate-client"),m=require("rxjs");var fe=require("@polkadot-api/substrate-client"),he=require("rxjs");var K=class{constructor(){te(this,"first");te(this,"last")}getRemoveFn(t){return()=>{t.prev?t.prev.next=t.next:this.first=t.next,t.next?t.next.prev=t.prev:this.last=t.prev,delete t.prev,delete t.next}}push(t){let e={value:t};return this.last===void 0?this.last=this.first=e:(this.last.next=e,e.prev=this.last,this.last=e),this.getRemoveFn(e)}unshift(t){return this.first={value:t,next:this.first},this.first.next&&(this.first.next.prev=this.first),this.last||(this.last=this.first),this.getRemoveFn(this.first)}pop(){let t=this.first?.value;return this.first&&(this.first=this.first.next,this.first?(delete this.first.prev?.next,delete this.first.prev):this.last=void 0),t}isEmpty(){return!this.first}},re=()=>{let r=new Map,t=(a,c)=>{r.set(a,()=>{r.delete(a),c()})},e=a=>{r.get(a)?.()},n=new K,o=n.unshift.bind(n),u=n.push.bind(n),p=(a,c)=>{let f=c?o:u;t(a.source$,f(a))},s=()=>{let a=n.pop();a&&(r.delete(a.source$),l(a))},l=a=>{let{source$:c,observer:f}=a,h=c.subscribe({next(S){f.next(S)},error(S){if(e(c),S instanceof fe.OperationLimitError)return p(a,!0);f.error(S),s()},complete(){f.complete(),s()}});f.closed||t(c,()=>{h.unsubscribe()})},k=(a=!1)=>c=>new he.Observable(f=>{let h={observer:f,source$:c};return n.isEmpty()?l(h):p(h,a),()=>{e(c)}}),g=k();return{withRecovery:k,withRecoveryFn:a=>(...c)=>g(a(...c))}};var M=require("rxjs"),ne=(r,t)=>e=>(n,...o)=>(n===null||n==="finalized"?r:n==="best"?t:(0,M.of)(n)).pipe((0,M.take)(1),(0,M.mergeMap)(p=>e(p,...o)));var ke=require("rxjs"),Z=r=>(...t)=>new ke.Observable(e=>{let n=new AbortController;return r(...t,n.signal).then(o=>{e.next(o),e.complete()},o=>{e.error(o)}),()=>{e.unsubscribe(),n.abort(),n=void 0}});var se=r=>t=>(...e)=>r()[t](...e);var T=require("rxjs");var $=class extends Error{constructor(){super("Block is not pinned"),this.name="BlockNotPinnedError"}},W=class extends Error{constructor(){super("Block pruned"),this.name="BlockPrunedError"}},N=class extends Error{constructor(){super("Block is not best block or finalized"),this.name="NotBestBlockError"}};var ye=require("@polkadot-api/substrate-client"),A=require("rxjs"),ve=r=>{let t=null,e=A.noop,n=new A.Observable(o=>{t=r(!0,u=>{o.next(u)},u=>{t=null,o.error(u)}),e=()=>{o.complete(),t?.unfollow()}}).pipe((0,A.share)());return{getFollower:()=>{if(!t)throw new Error("Missing chainHead subscription");return t},unfollow:()=>{e()},follow$:n}},q=()=>r=>new A.Observable(t=>{let e=new A.Subscription,n=()=>r.subscribe({next:o=>t.next(o),error:o=>{o instanceof ye.StopError?(t.next({type:"stop-error"}),e.add(n())):t.error(o)},complete:()=>t.complete()});return e.add(n()),e});var U=require("@polkadot-api/metadata-builders"),R=require("@polkadot-api/substrate-bindings"),xe=require("@polkadot-api/utils"),Q=require("rxjs"),tt=(0,R.Option)((0,R.Bytes)()),rt=(0,xe.toHex)(R.u32.enc(15)),we=r=>t=>{let e=new Set([t]),n=r(t,"Metadata_metadata_at_version",rt).pipe((0,Q.map)(u=>{let p=tt.dec(u),s=R.metadata.dec(p);if(s.metadata.tag!=="v15")throw new Error("Wrong metadata version");let l=s.metadata.value,k=(0,U.getChecksumBuilder)(l),g=(0,U.getDynamicBuilder)(l),w=g.buildStorage("System","Events"),a=s.metadata.value.extrinsic.signedExtensions.find(h=>h.identifier==="ChargeAssetTxPayment"),c=null;if(a){let h=(0,U.getLookupFn)(s.metadata.value.lookup)(a.type);if(h.type==="struct"){let S=h.value.asset_id;S.type==="option"&&(c=S.value.id)}}return{asset:c===null?[R._void.enc,null]:[g.buildDefinition(c).enc,k.buildDefinition(c)],metadataRaw:p,metadata:l,checksumBuilder:k,dynamicBuilder:g,events:{key:w.enc(),dec:w.dec},accountId:(0,R.AccountId)(g.ss58Prefix)}}),(0,Q.shareReplay)(1)),o={at:t,runtime:n,addBlock:u=>(e.add(u),o),deleteBlocks:u=>(u.forEach(p=>{e.delete(p)}),e.size),usages:e};return n.subscribe(),o};var C=require("rxjs");var Te=(r,t)=>{r.get(r.get(t).parent)?.children.delete(t),r.delete(t)},nt=(r,t)=>{let e=[...t],n=r.blocks.get(r.blocks.get(r.finalized).parent),o=[];for(;n;)o.push(n.hash),n.refCount===0&&!n.unpinned&&(e.push(n.hash),n.unpinned=!0),n=r.blocks.get(n.parent);let u=[...t];for(let p=o.length-1;p>=0;p--){if(n=r.blocks.get(o[p]),!n.unpinned)return e;u.push(n.hash)}return u.forEach(p=>{Te(r.blocks,p)}),Object.entries(r.runtimes).map(([p,s])=>({key:p,usages:s.deleteBlocks(u)})).filter(p=>p.usages===0).map(p=>p.key).forEach(p=>{delete r.runtimes[p]}),e},Be=(r,t,e,n,o)=>{let u=(0,C.merge)(n,r.pipe(st(t),q())).pipe((0,C.scan)((s,l)=>{switch(l.type){case"initialized":s.recovering&&(l.finalizedBlockHashes.some(c=>s.blocks.has(c))||(s=Oe()));let[k]=l.finalizedBlockHashes.slice(-1);s.finalized=s.best=k;let g=l.finalizedBlockHashes.length-1;l.finalizedBlockHashes.forEach((a,c)=>{s.blocks.has(a)?s.blocks.get(a).recovering=!1:s.blocks.set(a,{hash:a,parent:c===0?l.parentHash:l.finalizedBlockHashes[c-1],children:new Set(c===g?[]:[l.finalizedBlockHashes[c+1]]),runtime:a,refCount:0,number:l.number+c,recovering:!1})});let w=Object.values(s.runtimes).find(a=>a.usages.has(k));return s.finalizedRuntime=w??(s.runtimes[k]=p(k)),s;case"stop-error":for(let a of s.blocks.values())a.recovering=!0;return s.recovering=!0,s;case"newBlock":{let{parentBlockHash:a,blockHash:c}=l;if(s.blocks.has(c))s.blocks.get(c).recovering=!1;else{let f=s.blocks.get(a);f.children.add(c),l.newRuntime&&(s.runtimes[c]=p(c),s.runtimes[c].runtime.subscribe());let h={hash:c,number:f.number+1,parent:a,children:new Set,runtime:l.newRuntime?c:f.runtime,refCount:0,recovering:!1};s.blocks.set(c,h),s.runtimes[h.runtime].addBlock(c)}return s}case"bestBlockChanged":{if(s.recovering){for(let[a,c]of s.blocks)c.recovering&&Te(s.blocks,a);s.recovering=!1}return s.best=l.bestBlockHash,s}case"finalized":{s.finalized=l.finalizedBlockHashes.slice(-1)[0],s.finalizedRuntime=s.runtimes[s.blocks.get(s.finalized).runtime];let a=[...new Set(l.prunedBlockHashes)];return o(nt(s,a)),s}case"blockUsage":{if(!s.blocks.has(l.value.hash))return s;let a=s.blocks.get(l.value.hash);return a.refCount+=l.value.type==="hold"?1:-1,a.refCount===0&&a.number<s.blocks.get(s.finalized).number&&(a.unpinned=!0,o([a.hash])),s}}},Oe()),(0,C.map)(s=>({...s})),F),p=we(I(u,e));return u},Oe=()=>({best:"",finalized:"",runtimes:{},blocks:new Map,finalizedRuntime:{},recovering:!1}),st=r=>t=>t.pipe((0,C.concatMap)(e=>e.type!=="initialized"?(0,C.of)(e):r(e.finalizedBlockHashes[0]).then(n=>({...e,number:n.number,parentHash:n.parentHash}))));var x=require("rxjs"),Re=r=>t=>t.pipe((0,x.takeWhile)(e=>e.blocks.has(r)),(0,x.distinctUntilChanged)((e,n)=>e.finalized===n.finalized),(0,x.filter)(e=>e.blocks.get(e.finalized).number>=e.blocks.get(r).number),(0,x.take)(1),(0,x.map)(e=>{let{number:n}=e.blocks.get(r),o=e.blocks.get(e.finalized);for(;o.number>n;)o=e.blocks.get(o.parent);return o.hash===r})),Y=r=>t=>t.pipe((0,x.takeWhile)(e=>e.blocks.has(r)),(0,x.distinctUntilChanged)((e,n)=>e.best===n.best),(0,x.filter)(e=>e.blocks.get(e.best).number>=e.blocks.get(r).number),(0,x.map)(e=>{let{number:n}=e.blocks.get(r),o=e.blocks.get(e.best),u=e.finalized===o.hash;for(;o.number>n;)o=e.blocks.get(o.parent),u=u||e.finalized===o.hash;return{isBest:o.hash===r,isFinalized:u}}),(0,x.takeWhile)(({isFinalized:e})=>!e,!0),(0,x.map)(({isBest:e})=>e));function oe(r,t,e){return(n,...o)=>e(n,...o).pipe(it(n,t.pipe(q(),(0,T.filter)(u=>u.type==="finalized"),(0,T.mergeMap)(u=>u.prunedBlockHashes))),ot(n,r))}var ot=(r,t)=>e=>t.pipe(Y(r),(0,T.take)(1),(0,T.switchMap)(n=>n?e:(0,T.throwError)(()=>new N))),it=(r,t)=>e=>new T.Observable(n=>{let o=t.pipe((0,T.filter)(p=>p===r)).subscribe(()=>{n.error(new W)}),u=e.subscribe(n);return()=>{o.unsubscribe(),u.unsubscribe()}});var Se=require("rxjs");function I(r,t){return(e,...n)=>{let o=t(e,...n);return new Se.Observable(u=>{let p=null,s=()=>{p||(p=o.subscribe({next:g=>u.next(g),error:g=>u.error(g),complete:()=>u.complete()}))},l=!1,k=r.subscribe({next:g=>{let w=g.blocks.get(e);w?w.recovering?(p?.unsubscribe(),p=null):s():l&&u.error(new $),l=g.recovering},error:g=>u.error(g)});return()=>{k.unsubscribe(),p?.unsubscribe()}})}}var ze=require("@polkadot-api/substrate-client"),P=require("rxjs"),at=r=>{let t=r.pipe((0,P.catchError)(e=>e instanceof ze.OperationInaccessibleError?(0,P.timer)(750).pipe((0,P.concatMap)(()=>t)):(0,P.throwError)(()=>e)));return t},G=r=>(...t)=>at(r(...t));var J=require("rxjs"),Ee=(r,t)=>{let e=(n,o,u,p)=>new J.Observable(s=>r().storageSubscription(n,o,u??null,l=>{s.next(l)},l=>{s.error(l)},()=>{s.complete()},l=>{l!==0&&s.next(e(n,o.slice(-l),u,!0))})).pipe((0,J.mergeAll)(),t(p));return e};var d=require("rxjs");var Ce=(r,t)=>e=>r.pipe((0,d.take)(1),(0,d.concatMap)(n=>{let o=new Set(n.blocks.keys()),u=s=>o.has(s)?(0,d.of)(-1):t(s).pipe((0,d.catchError)(()=>d.EMPTY),(0,d.takeUntil)(r.pipe((0,d.filter)(({blocks:l})=>!l.has(s)))),(0,d.map)(l=>l.indexOf(e))),p=s=>u(s).pipe((0,d.concatMap)(l=>l>-1?(0,d.of)({hash:s,idx:l}):r.pipe((0,d.takeWhile)(k=>k.blocks.has(s)),(0,d.mergeMap)(k=>k.blocks.get(s).children),(0,d.distinct)(),(0,d.mergeMap)(p))));return p(n.finalized).pipe((0,d.mergeMap)(({hash:s,idx:l})=>(0,d.concat)(r.pipe(Y(s),(0,d.filter)(Boolean),(0,d.take)(1),(0,d.map)(()=>({type:"bestChainBlockIncluded",block:{hash:s,index:l}}))),r.pipe(Re(s),(0,d.filter)(Boolean),(0,d.map)(()=>({type:"finalized",block:{hash:s,index:l}}))))))}),(0,d.takeWhile)(n=>n.type!=="finalized",!0));var Ae=require("rxjs"),H=require("@polkadot-api/utils"),lt=new Uint8Array([2]),ct=(r,t)=>(0,H.toHex)((0,H.mergeUint8)(lt,(0,H.fromHex)(r),(0,H.fromHex)(t))),$e=r=>(t,e)=>r(e,"TaggedTransactionQueue_validate_transaction",ct(t,e)).pipe((0,Ae.map)(n=>n.startsWith("0x00")));var ie=({hash:r,number:t,parent:e})=>({hash:r,number:t,parent:e}),Fe=r=>{let{getFollower:t,unfollow:e,follow$:n}=ve(r),o=se(t),{withRecovery:u,withRecoveryFn:p}=re(),s=new m.Subject,l=i=>(b,...y)=>new m.Observable(v=>{s.next({type:"blockUsage",value:{type:"hold",hash:b}});let B=i(b,...y).subscribe(v);return()=>{setTimeout(()=>{s.next({type:"blockUsage",value:{type:"release",hash:b}})},0),B.unsubscribe()}}),k=i=>(b,...y)=>new m.Observable(v=>{let B=!1;return h.pipe((0,m.take)(1)).subscribe(z=>{let E=z.blocks.get(b);B=!!E&&!E.unpinned}),B?i(b,...y).subscribe(v):v.error(new $)}),g=i=>t().header(i).then(Ie.blockHeader.dec),w=i=>t().unpin(i).catch(b=>{if(!(b instanceof Pe.DisjointError))throw b}),a=i=>k(l(oe(h,n,I(h,G(p(Z(i))))))),c=G(p(Z(o("call")))),f=new Map,h=Be(n,g,c,s,i=>{w(i),i.forEach(b=>{f.delete(b)})}),S=l(i=>h.pipe((0,m.take)(1),(0,m.mergeMap)(b=>b.runtimes[b.blocks.get(i).runtime].runtime))),We=i=>b=>b.pipe(me(y=>S(i(y)).pipe((0,m.map)(v=>[y,v])))),X=(i,b,y)=>{let v=f.get(i)?.get(b);if(v)return v;f.has(i)||f.set(i,new Map);let B=y.pipe((0,m.share)({connector:()=>new m.ReplaySubject,resetOnError:!0,resetOnRefCountZero:!0,resetOnComplete:!1}));return f.get(i).set(b,B),B},ae=h.pipe((0,m.distinctUntilChanged)((i,b)=>i.finalized===b.finalized),(0,m.map)(i=>ie(i.blocks.get(i.finalized))),F),le=h.pipe((0,m.distinctUntilChanged)((i,b)=>i.best===b.best),(0,m.map)(i=>ie(i.blocks.get(i.best))),F),ce=h.pipe((0,m.distinctUntilChanged)((i,b)=>i.best===b.best),(0,m.scan)((i,b)=>{let y=O=>i.get(O)||ie(b.blocks.get(O)),v=y(b.best),B=y(b.finalized),z=v.number-B.number+1,E=new Array(z);for(let O=0,_=v.hash;O<z;O++)E[O]=y(_),_=E[O].parent;return new Map(E.map(O=>[O.hash,O]))},new Map),(0,m.map)(i=>[...i.values()]),F),ee=h.pipe((0,m.distinctUntilChanged)((i,b)=>i.finalizedRuntime===b.finalizedRuntime),(0,m.switchMap)(({finalizedRuntime:{runtime:i}})=>i.pipe(ge(null))),F),Ne=ee.pipe((0,m.map)(i=>i?.metadata??null)),V=ne(ae.pipe((0,m.map)(i=>i.hash)),le.pipe((0,m.map)(i=>i.hash))),Ue=a(o("body")),ue=i=>X(i,"body",Ue(i)),Ve=Ce(h,ue),_e=a(o("storage")),pe=V((i,b,y,v=null,B)=>h.pipe((0,m.take)(1),(0,m.mergeMap)(z=>z.runtimes[z.blocks.get(i).runtime].runtime),(0,m.mergeMap)(z=>{let E=y(z),O=X(i,`storage-${b}-${E}-${v??""}`,_e(i,b,E,v));return B?X(i,`storage-${b}-${E}-${v??""}-dec`,O.pipe((0,m.map)(_=>B(_,z)))):O}))),je=Ee(t,u),De=G(V(l(I(h,(i,b,y)=>je(i,b,y??null,!1))))),Le=V(l(I(h,i=>(0,m.defer)(()=>g(i)))));(0,m.merge)(ee,ce).subscribe();let Ke=i=>pe(i,"value",b=>b.events.key,null,(b,y)=>y.events.dec(b)),be=V(l(I(h,c))),Ze=$e(be);return{follow$:n,finalized$:ae,best$:le,bestBlocks$:ce,runtime$:ee,metadata$:Ne,header$:Le,body$:ue,call$:be,storage$:pe,storageQueries$:De,eventsAt$:Ke,validateTx$:Ze,trackTx$:Ve,withRuntime:We,getRuntimeContext$:V(S),unfollow:e}};var He=require("rxjs"),Me=r=>t=>new He.Observable(e=>r(t,n=>{e.error(n)}));var ut=({chainHead:r,transaction:t,destroy:e})=>({chainHead$:()=>Fe(r),broadcastTx$:Me(t),destroy:e});
//# sourceMappingURL=index.js.map